{"version":3,"file":"index.mjs","sources":["../lib/print.js","../lib/main.js","../lib/validate.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isPositiveInteger from '@stdlib/assert-is-positive-integer';\nimport isObject from '@stdlib/assert-is-plain-object';\nimport { isPrimitive as isBoolean } from '@stdlib/assert-is-boolean';\nimport hasOwnProp from '@stdlib/assert-has-own-property';\nimport roundn from '@stdlib/math-base-special-roundn';\nimport format from '@stdlib/error-tools-fmtprodmsg';\n\n\n// MAIN //\n\n/**\n* Pretty-print output of test.\n*\n* @param {Object} [opts] - options object\n* @param {PositiveInteger} [opts.digits=4] - number of digits after the decimal point\n* @param {boolean} [opts.decision=true] - boolean indicating whether to print the test decision\n* @throws {TypeError} options must be an object\n* @throws {TypeError} must provide valid options\n* @returns {string} formatted output\n*/\nfunction print( opts ) { // eslint-disable-line stdlib/no-redeclare\n\t/* eslint-disable no-invalid-this */\n\tvar decision;\n\tvar dgts;\n\tvar str;\n\n\tdgts = 4;\n\tdecision = true;\n\tif ( arguments.length > 0 ) {\n\t\tif ( !isObject( opts ) ) {\n\t\t\tthrow new TypeError( format( '1Lv3L,Gc', opts ) );\n\t\t}\n\t\tif ( hasOwnProp( opts, 'digits' ) ) {\n\t\t\tif ( !isPositiveInteger( opts.digits ) ) {\n\t\t\t\tthrow new TypeError( format( '1Lv3P,Fv', 'digits', opts.digits ) );\n\t\t\t}\n\t\t\tdgts = opts.digits;\n\t\t}\n\t\tif ( hasOwnProp( opts, 'decision' ) ) {\n\t\t\tif ( !isBoolean( opts.decision ) ) {\n\t\t\t\tthrow new TypeError( format( '1Lv2o,GE', 'decision', opts.decision ) );\n\t\t\t}\n\t\t\tdecision = opts.decision;\n\t\t}\n\t}\n\n\tstr = '';\n\tstr += this.method;\n\tstr += '\\n\\n';\n\tstr += 'Alternative hypothesis: ';\n\tstr += 'True ratio in variances is ';\n\tswitch ( this.alternative ) {\n\tcase 'less':\n\t\tstr += 'less than ';\n\t\tbreak;\n\tcase 'greater':\n\t\tstr += 'greater than ';\n\t\tbreak;\n\tcase 'two-sided':\n\tdefault:\n\t\tstr += 'not equal to ';\n\t\tbreak;\n\t}\n\tstr += this.nullValue;\n\tstr += '\\n\\n';\n\tstr += '    pValue: ' + roundn( this.pValue, -dgts ) + '\\n';\n\tstr += '    statistic: ' + roundn( this.statistic, -dgts ) + '\\n';\n\tstr += '    variance of x: ' + roundn( this.xvar, -dgts );\n\tstr += ' (df of x: ' + roundn( this.dfX, -dgts ) + ')\\n';\n\tstr += '    variance of y: ' + roundn( this.yvar, -dgts );\n\tstr += ' (df of y: ' + roundn( this.dfY, -dgts ) + ')\\n';\n\tstr += '    ' + ((1.0-this.alpha)*100) + '% confidence interval: [' +\n\t\troundn( this.ci[0], -dgts ) +\n\t\t',' +\n\t\troundn( this.ci[1], -dgts ) +\n\t']';\n\tstr += '\\n\\n';\n\tif ( decision ) {\n\t\tstr += 'Test Decision: ';\n\t\tif ( this.rejected ) {\n\t\t\tstr += 'Reject null in favor of alternative at ' + (this.alpha*100) + '% significance level';\n\t\t} else {\n\t\t\tstr += 'Fail to reject null in favor of alternative at ' + (this.alpha*100) + '% significance level';\n\t\t}\n\t\tstr += '\\n';\n\t}\n\treturn str;\n}\n\n\n// EXPORTS //\n\nexport default print;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { primitives as isNumberArray } from '@stdlib/assert-is-number-array';\nimport isTypedArrayLike from '@stdlib/assert-is-typed-array-like';\nimport setReadOnly from '@stdlib/utils-define-read-only-property';\nimport fCDF from '@stdlib/stats-base-dists-f-cdf';\nimport fQuantile from '@stdlib/stats-base-dists-f-quantile';\nimport variance from '@stdlib/stats-base-variance';\nimport format from '@stdlib/error-tools-fmtprodmsg';\nimport min from '@stdlib/math-base-special-min';\nimport PINF from '@stdlib/constants-float64-pinf';\nimport validate from './validate.js';\nimport print from './print.js'; // eslint-disable-line stdlib/no-redeclare\n\n\n// MAIN //\n\n/**\n* Computes a two-sample F-test for equal variances.\n*\n* @param {NumericArray} x - first data array\n* @param {NumericArray} y - second data array\n* @param {Options} [options] - function options\n* @param {number} [options.alpha=0.05] - significance level\n* @param {string} [options.alternative='two-sided'] - alternative hypothesis (`two-sided`, `less` or `greater`)\n* @param {PositiveNumber} [options.ratio=1] - ratio of population variances under H0\n* @throws {TypeError} x argument has to be a typed array or array of numbers\n* @throws {TypeError} y argument has to be a typed array or array of numbers\n* @throws {TypeError} options must be an object\n* @throws {TypeError} alpha option has to be a number\n* @throws {RangeError} alpha option has to be a number in the interval `[0,1]`\n* @throws {TypeError} alternative option has to be a string\n* @throws {Error} alternative option must be `two-sided`, `less` or `greater`\n* @throws {TypeError} ratio option has to be a number\n* @returns {Object} test result object\n*\n* @example\n* var x = [ 610, 610, 550, 590, 565, 570 ];\n* var y = [ 560, 550, 580, 550, 560, 590, 550, 590 ];\n*\n* var out = vartest( x, y );\n*/\nfunction vartest( x, y, options ) {\n\tvar estimate;\n\tvar alpha;\n\tvar ratio;\n\tvar beta;\n\tvar cint;\n\tvar opts;\n\tvar pval;\n\tvar stat;\n\tvar xvar;\n\tvar yvar;\n\tvar alt;\n\tvar err;\n\tvar out;\n\tvar dfX;\n\tvar dfY;\n\n\tif ( !isTypedArrayLike( x ) && !isNumberArray( x ) ) {\n\t\tthrow new TypeError( format( '1Lv8R,GO', x ) );\n\t}\n\tif ( !isTypedArrayLike( y ) && !isNumberArray( y ) ) {\n\t\tthrow new TypeError( format( '1Lv9k,GP', y ) );\n\t}\n\topts = {};\n\tif ( options ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\tratio = opts.ratio || 1.0;\n\tif ( opts.alpha === void 0 ) {\n\t\talpha = 0.05;\n\t} else {\n\t\talpha = opts.alpha;\n\t}\n\tif ( alpha < 0.0 || alpha > 1.0 ) {\n\t\tthrow new RangeError( format( '1Lv8V,Gb', 'alpha', alpha ) );\n\t}\n\tdfX = x.length - 1;\n\tdfY = y.length - 1;\n\n\txvar = variance( x.length, 1, x, 1 );\n\tyvar = variance( y.length, 1, y, 1 );\n\n\testimate = xvar / yvar;\n\tstat = estimate / ratio;\n\tpval = fCDF( stat, dfX, dfY );\n\n\talt = opts.alternative || 'two-sided';\n\tswitch ( alt ) {\n\tcase 'two-sided':\n\t\tpval = 2.0 * min( pval, 1.0 - pval );\n\t\tbeta = alpha / 2.0;\n\t\tcint = [\n\t\t\testimate / fQuantile( 1.0 - beta, dfX, dfY ),\n\t\t\testimate / fQuantile( beta, dfX, dfY )\n\t\t];\n\t\tbreak;\n\tcase 'greater':\n\t\tpval = 1.0 - pval;\n\t\tcint = [\n\t\t\testimate / fQuantile( 1.0 - alpha, dfX, dfY ),\n\t\t\tPINF\n\t\t];\n\t\tbreak;\n\tcase 'less':\n\t\tcint = [\n\t\t\t0.0,\n\t\t\testimate / fQuantile( alpha, dfX, dfY )\n\t\t];\n\t\tbreak;\n\tdefault:\n\t\tthrow new Error( format( '1Lv2X,3g,4S,GD,Gg,Jm', 'alternative', [ 'two-sided', 'less', 'greater' ].join( '\", \"' ), alt ) );\n\t}\n\tout = {};\n\tsetReadOnly( out, 'rejected', pval <= alpha );\n\tsetReadOnly( out, 'alpha', alpha );\n\tsetReadOnly( out, 'pValue', pval );\n\tsetReadOnly( out, 'statistic', stat );\n\tsetReadOnly( out, 'ci', cint );\n\tsetReadOnly( out, 'alternative', alt );\n\tsetReadOnly( out, 'xvar', xvar );\n\tsetReadOnly( out, 'yvar', yvar );\n\tsetReadOnly( out, 'dfX', dfX );\n\tsetReadOnly( out, 'dfY', dfY );\n\tsetReadOnly( out, 'method', 'F test for comparing two variances' );\n\tsetReadOnly( out, 'nullValue', ratio );\n\tsetReadOnly( out, 'print', print );\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default vartest;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isNumber } from '@stdlib/assert-is-number';\nimport { isPrimitive as isPositiveNumber } from '@stdlib/assert-is-positive-number';\nimport isObject from '@stdlib/assert-is-plain-object';\nimport { isPrimitive as isString } from '@stdlib/assert-is-string';\nimport isnan from '@stdlib/assert-is-nan';\nimport hasOwnProp from '@stdlib/assert-has-own-property';\nimport format from '@stdlib/error-tools-fmtprodmsg';\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination for validated options\n* @param {Options} options - function options\n* @param {number} [options.alpha] - significance level\n* @param {string} [options.alternative] - alternative hypothesis (`two-sided`, `less` or `greater`)\n* @param {PositiveNumber} [options.ratio] - ratio of population variances under H0\n* @returns {(null|Error)} null or an error\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( '1Lv2V,FD', options ) );\n\t}\n\tif ( hasOwnProp( options, 'alpha' ) ) {\n\t\topts.alpha = options.alpha;\n\t\tif ( !isNumber( opts.alpha ) || isnan( opts.alpha ) ) {\n\t\t\treturn new TypeError( format( '1Lv8P,GU', 'alpha', opts.alpha ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'alternative' ) ) {\n\t\topts.alternative = options.alternative;\n\t\tif ( !isString( opts.alternative ) ) {\n\t\t\treturn new TypeError( format( '1Lv2W,Gh', 'alternative', opts.alternative ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'ratio' ) ) {\n\t\topts.ratio = options.ratio;\n\t\tif ( !isPositiveNumber( opts.ratio ) || isnan( opts.ratio ) ) {\n\t\t\treturn new TypeError( format( '1Lv4D,Gu', 'ratio', opts.ratio ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n"],"names":["print","opts","decision","dgts","str","arguments","length","isObject","TypeError","format","hasOwnProp","isPositiveInteger","digits","isBoolean","this","method","alternative","nullValue","roundn","pValue","statistic","xvar","dfX","yvar","dfY","alpha","ci","rejected","vartest","x","y","options","estimate","ratio","beta","cint","pval","stat","alt","err","out","isTypedArrayLike","isNumberArray","isNumber","isnan","isString","isPositiveNumber","validate","RangeError","variance","fCDF","min","fQuantile","PINF","Error","join","setReadOnly"],"mappings":"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"}