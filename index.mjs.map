{"version":3,"file":"index.mjs","sources":["../lib/validate.js","../lib/print.js","../lib/main.js","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNumber = require( '@stdlib/assert-is-number' ).isPrimitive;\nvar isPositiveNumber = require( '@stdlib/assert-is-positive-number' ).isPrimitive;\nvar isObject = require( '@stdlib/assert-is-plain-object' );\nvar isString = require( '@stdlib/assert-is-string' ).isPrimitive;\nvar isnan = require( '@stdlib/assert-is-nan' );\nvar hasOwnProp = require( '@stdlib/assert-has-own-property' );\nvar format = require( '@stdlib/string-format' );\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination for validated options\n* @param {Options} options - function options\n* @param {number} [options.alpha] - significance level\n* @param {string} [options.alternative] - alternative hypothesis (`two-sided`, `less` or `greater`)\n* @param {PositiveNumber} [options.ratio] - ratio of population variances under H0\n* @returns {(null|Error)} null or an error\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'alpha' ) ) {\n\t\topts.alpha = options.alpha;\n\t\tif ( !isNumber( opts.alpha ) || isnan( opts.alpha ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a number. Option: `%s`.', 'alpha', opts.alpha ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'alternative' ) ) {\n\t\topts.alternative = options.alternative;\n\t\tif ( !isString( opts.alternative ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a string. Option: `%s`.', 'alternative', opts.alternative ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'ratio' ) ) {\n\t\topts.ratio = options.ratio;\n\t\tif ( !isPositiveNumber( opts.ratio ) || isnan( opts.ratio ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a positive number. Option: `%s`.', 'ratio', opts.ratio ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPositiveInteger = require( '@stdlib/assert-is-positive-integer' );\nvar isObject = require( '@stdlib/assert-is-plain-object' );\nvar isBoolean = require( '@stdlib/assert-is-boolean' ).isPrimitive;\nvar hasOwnProp = require( '@stdlib/assert-has-own-property' );\nvar roundn = require( '@stdlib/math-base-special-roundn' );\nvar format = require( '@stdlib/string-format' );\n\n\n// MAIN //\n\n/**\n* Pretty-print output of test.\n*\n* @param {Object} [opts] - options object\n* @param {PositiveInteger} [opts.digits=4] - number of digits after the decimal point\n* @param {boolean} [opts.decision=true] - boolean indicating whether to print the test decision\n* @throws {TypeError} options has to be simple object\n* @throws {TypeError} must provide valid options\n* @returns {string} formatted output\n*/\nfunction print( opts ) { // eslint-disable-line stdlib/no-redeclare\n\t/* eslint-disable no-invalid-this */\n\tvar decision;\n\tvar dgts;\n\tvar str;\n\n\tdgts = 4;\n\tdecision = true;\n\tif ( arguments.length > 0 ) {\n\t\tif ( !isObject( opts ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be an options object. Value: `%s`.', opts ) );\n\t\t}\n\t\tif ( hasOwnProp( opts, 'digits' ) ) {\n\t\t\tif ( !isPositiveInteger( opts.digits ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be a positive integer. Option: `%s`.', 'digits', opts.digits ) );\n\t\t\t}\n\t\t\tdgts = opts.digits;\n\t\t}\n\t\tif ( hasOwnProp( opts, 'decision' ) ) {\n\t\t\tif ( !isBoolean( opts.decision ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'decision', opts.decision ) );\n\t\t\t}\n\t\t\tdecision = opts.decision;\n\t\t}\n\t}\n\n\tstr = '';\n\tstr += this.method;\n\tstr += '\\n\\n';\n\tstr += 'Alternative hypothesis: ';\n\tstr += 'True ratio in variances is ';\n\tswitch ( this.alternative ) {\n\tcase 'two-sided':\n\tdefault:\n\t\tstr += 'not equal to ';\n\t\tbreak;\n\tcase 'less':\n\t\tstr += 'less than ';\n\t\tbreak;\n\tcase 'greater':\n\t\tstr += 'greater than ';\n\t\tbreak;\n\t}\n\tstr += this.nullValue;\n\tstr += '\\n\\n';\n\tstr += '    pValue: ' + roundn( this.pValue, -dgts ) + '\\n';\n\tstr += '    statistic: ' + roundn( this.statistic, -dgts ) + '\\n';\n\tstr += '    variance of x: ' + roundn( this.xvar, -dgts );\n\tstr += ' (df of x: ' + roundn( this.dfX, -dgts ) + ')\\n';\n\tstr += '    variance of y: ' + roundn( this.yvar, -dgts );\n\tstr += ' (df of y: ' + roundn( this.dfY, -dgts ) + ')\\n';\n\tstr += '    ' + ((1.0-this.alpha)*100) + '% confidence interval: [' +\n\t\troundn( this.ci[0], -dgts ) +\n\t\t',' +\n\t\troundn( this.ci[1], -dgts ) +\n\t']';\n\tstr += '\\n\\n';\n\tif ( decision ) {\n\t\tstr += 'Test Decision: ';\n\t\tif ( this.rejected ) {\n\t\t\tstr += 'Reject null in favor of alternative at ' + (this.alpha*100) + '% significance level';\n\t\t} else {\n\t\t\tstr += 'Fail to reject null in favor of alternative at ' + (this.alpha*100) + '% significance level';\n\t\t}\n\t\tstr += '\\n';\n\t}\n\treturn str;\n}\n\n\n// EXPORTS //\n\nmodule.exports = print;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNumberArray = require( '@stdlib/assert-is-number-array' ).primitives;\nvar isTypedArrayLike = require( '@stdlib/assert-is-typed-array-like' );\nvar setReadOnly = require( '@stdlib/utils-define-read-only-property' );\nvar fCDF = require( '@stdlib/stats-base-dists-f-cdf' );\nvar fQuantile = require( '@stdlib/stats-base-dists-f-quantile' );\nvar variance = require( '@stdlib/stats-base-variance' );\nvar format = require( '@stdlib/string-format' );\nvar min = require( '@stdlib/math-base-special-min' );\nvar PINF = require( '@stdlib/constants-float64-pinf' );\nvar validate = require( './validate.js' );\nvar print = require( './print.js' ); // eslint-disable-line stdlib/no-redeclare\n\n\n// MAIN //\n\n/**\n* Computes a two-sample F-test for equal variances.\n*\n* @param {NumericArray} x - first data array\n* @param {NumericArray} y - second data array\n* @param {Options} [options] - function options\n* @param {number} [options.alpha=0.05] - significance level\n* @param {string} [options.alternative='two-sided'] - alternative hypothesis (`two-sided`, `less` or `greater`)\n* @param {PositiveNumber} [options.ratio=1] - ratio of population variances under H0\n* @throws {TypeError} x argument has to be a typed array or array of numbers\n* @throws {TypeError} y argument has to be a typed array or array of numbers\n* @throws {TypeError} options has to be simple object\n* @throws {TypeError} alpha option has to be a number\n* @throws {RangeError} alpha option has to be a number in the interval `[0,1]`\n* @throws {TypeError} alternative option has to be a string\n* @throws {Error} alternative option must be `two-sided`, `less` or `greater`\n* @throws {TypeError} ratio option has to be a number\n* @returns {Object} test result object\n*\n* @example\n* var x = [ 610, 610, 550, 590, 565, 570 ];\n* var y = [ 560, 550, 580, 550, 560, 590, 550, 590 ];\n*\n* var out = vartest( x, y );\n*/\nfunction vartest( x, y, options ) {\n\tvar estimate;\n\tvar alpha;\n\tvar ratio;\n\tvar beta;\n\tvar cint;\n\tvar opts;\n\tvar pval;\n\tvar stat;\n\tvar xvar;\n\tvar yvar;\n\tvar alt;\n\tvar err;\n\tvar out;\n\tvar dfX;\n\tvar dfY;\n\n\tif ( !isTypedArrayLike( x ) && !isNumberArray( x ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument `x` must be a numeric array. Value: `%s`.', x ) );\n\t}\n\tif ( !isTypedArrayLike( y ) && !isNumberArray( y ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument `y` must be a numeric array. Value: `%s`.', y ) );\n\t}\n\topts = {};\n\tif ( options ) {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\tratio = opts.ratio || 1.0;\n\tif ( opts.alpha === void 0 ) {\n\t\talpha = 0.05;\n\t} else {\n\t\talpha = opts.alpha;\n\t}\n\tif ( alpha < 0.0 || alpha > 1.0 ) {\n\t\tthrow new RangeError( format( 'invalid argument. Option `alpha` must be a number in the range 0 to 1. Value: `%f`.', alpha ) );\n\t}\n\tdfX = x.length - 1;\n\tdfY = y.length - 1;\n\n\txvar = variance( x.length, 1, x, 1 );\n\tyvar = variance( y.length, 1, y, 1 );\n\n\testimate = xvar / yvar;\n\tstat = estimate / ratio;\n\tpval = fCDF( stat, dfX, dfY );\n\n\talt = opts.alternative || 'two-sided';\n\tswitch ( alt ) {\n\tcase 'two-sided':\n\t\tpval = 2.0 * min( pval, 1.0 - pval );\n\t\tbeta = alpha / 2.0;\n\t\tcint = [\n\t\t\testimate / fQuantile( 1.0 - beta, dfX, dfY ),\n\t\t\testimate / fQuantile( beta, dfX, dfY )\n\t\t];\n\t\tbreak;\n\tcase 'greater':\n\t\tpval = 1.0 - pval;\n\t\tcint = [\n\t\t\testimate / fQuantile( 1.0 - alpha, dfX, dfY ),\n\t\t\tPINF\n\t\t];\n\t\tbreak;\n\tcase 'less':\n\t\tcint = [\n\t\t\t0.0,\n\t\t\testimate / fQuantile( alpha, dfX, dfY )\n\t\t];\n\t\tbreak;\n\tdefault:\n\t\tthrow new Error( format( 'Invalid option. `alternative` must be either `two-sided`, `less`, or `greater`. Value: `%s`.', alt ) );\n\t}\n\tout = {};\n\tsetReadOnly( out, 'rejected', pval <= alpha );\n\tsetReadOnly( out, 'alpha', alpha );\n\tsetReadOnly( out, 'pValue', pval );\n\tsetReadOnly( out, 'statistic', stat );\n\tsetReadOnly( out, 'ci', cint );\n\tsetReadOnly( out, 'alternative', alt );\n\tsetReadOnly( out, 'xvar', xvar );\n\tsetReadOnly( out, 'yvar', yvar );\n\tsetReadOnly( out, 'dfX', dfX );\n\tsetReadOnly( out, 'dfY', dfY );\n\tsetReadOnly( out, 'method', 'F test for comparing two variances' );\n\tsetReadOnly( out, 'nullValue', ratio );\n\tsetReadOnly( out, 'print', print );\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = vartest;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute a two-sample F-test for equal variances.\n*\n* @module @stdlib/stats-vartest\n*\n* @example\n* var vartest = require( '@stdlib/stats-vartest' );\n*\n* var x = [ 610, 610, 550, 590, 565, 570 ];\n* var y = [ 560, 550, 580, 550, 560, 590, 550, 590 ];\n*\n* var out = vartest( x, y );\n*/\n\n// MODULES //\n\nvar vartest = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = vartest;\n"],"names":["isNumber","require$$0","isPrimitive","isPositiveNumber","require$$1","isObject","require$$2","isString","require$$3","isnan","require$$4","hasOwnProp","require$$5","format","require$$6","validate_1","opts","options","alpha","TypeError","alternative","ratio","isPositiveInteger","isBoolean","roundn","print_1","decision","dgts","str","arguments","length","digits","this","method","nullValue","pValue","statistic","xvar","dfX","yvar","dfY","ci","rejected","isNumberArray","primitives","isTypedArrayLike","setReadOnly","fCDF","fQuantile","variance","min","require$$7","PINF","require$$8","validate","require$$9","print","require$$10","lib","x","y","estimate","beta","cint","pval","stat","alt","err","out","RangeError","Error"],"mappings":"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"}